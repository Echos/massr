.statement{:id => "st-#{statement._id}"}

	/ アイコン
	.statement-icon
		%a{:href => "/user/#{statement.user.massr_id}"}
			%img.massr-icon{:src => statement.user.twitter_icon_url}

	%div{:class => "#{session[:user_id] == statement.user._id ? "statement-body-me statement-body" : "statement-body"}"}
		/ レスポンス元発言
		- if statement.res
			.statement-res
				%a{:href => "/statement/#{statement.res._id}"}
					&gt; #{statement.res.body} by #{statement.res.user.name}

		/ 発言本文
		.statement-message<#{statement.body.gsub(/[\r\n]+/, ' ')}

		/ 発言の付属情報
		.statement-info
			by
			%a{:href => "/user/#{statement.user.massr_id}"}<#{statement.user.name}
			at
			%a{:href => "/statement/#{statement._id}"}
				= statement.created_at.localtime.strftime('%Y-%m-%d %H:%M:%S')
			- statement.likes.delete_if{|like| !like.user}

		/ アクション
		.statement-action
			- if statement.user._id == session[:user_id]
				%a.trash{:href => "#"}
					%i.icon-trash{:title => _delete}
			%a.res{:href => '#'}
				%i.icon-comment{:title => _res}
				= statement.refs.size > 0 ? "(#{statement.refs.size})" : ''
			- like = statement.like?(current_user) ? 'unlike' : 'like'
			%a{:class => "like-button #{like}", :href => '#', :id => "like-#{statement._id}"}
				%img.unlike{:src => "/img/wakaruwa.png", :alt => _unlike, :title => _unlike}
				%img.like{:src => "/img/wakaranaiwa.png", :alt => _like, :title => _like}

		/ わかるわ一覧
		- unless statement.likes.size == 0
			.statement-like
				#{_like}:
				- statement.likes.each do |like|
					%a{:href => "/user/#{like.user.massr_id}"}
						%img.massr-icon-mini{:src => like.user.twitter_icon_url, :title => like.user.name, :alt => like.user.name}

		/ レスフォーム
		.response{:id=>"res-#{statement._id}"}
			%form{:method => "POST", :action => "/statement"}
				%textarea{:type => "text", :name => "body"}
				%input{:type => "hidden", :name => "res_id", :value => statement._id}
				%input{csrf_input}
				%input.btn{:type => "submit" , :value => _post_res}
